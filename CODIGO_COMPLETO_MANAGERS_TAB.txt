// SUBSTITUIR a seção TabsContent de "managers" 
// Encontre: <TabsContent value="managers" className="space-y-6">
// E substitua TODO o conteúdo até </TabsContent> por este código:

<TabsContent value="managers" className="space-y-6">
  {/* Botão Adicionar Gerente */}
  <Card className="bg-card border-border">
    <CardContent className="pt-6">
      <Button
        onClick={() => setModalOpen(true)}
        className="w-full md:w-auto bg-primary hover:bg-primary/90"
        size="lg"
      >
        <UserPlus size={20} className="mr-2" />
        Adicionar Novo Gerente
      </Button>
    </CardContent>
  </Card>

  {/* Modal Criar Gerente */}
  <Dialog open={modalOpen} onOpenChange={setModalOpen}>
    <DialogContent className="max-w-2xl max-h-[90vh] overflow-y-auto" onClose={() => setModalOpen(false)}>
      <DialogHeader>
        <DialogTitle className="flex items-center gap-2">
          <UserPlus size={24} className="text-primary" />
          Cadastrar Novo Gerente
        </DialogTitle>
        <DialogDescription>
          Preencha as informações do gerente de contas
        </DialogDescription>
      </DialogHeader>

      <div className="space-y-6 mt-4">
        {/* Upload de Foto */}
        <div className="flex flex-col items-center gap-4 p-6 bg-accent/30 rounded-lg border border-border">
          <div className="relative">
            {photoPreview ? (
              <img
                src={photoPreview}
                alt="Preview"
                className="w-32 h-32 rounded-full object-cover border-4 border-primary"
              />
            ) : (
              <div className="w-32 h-32 rounded-full bg-accent flex items-center justify-center border-4 border-border">
                <Camera size={48} className="text-muted-foreground" />
              </div>
            )}
          </div>
          
          <Label htmlFor="photo-upload" className="cursor-pointer">
            <div className="flex items-center gap-2 px-4 py-2 bg-primary text-white rounded-lg hover:bg-primary/90 transition-colors">
              <Upload size={18} />
              <span>{photoPreview ? 'Trocar Foto' : 'Selecionar Foto'}</span>
            </div>
            <Input
              id="photo-upload"
              type="file"
              accept="image/*"
              onChange={handlePhotoChange}
              className="hidden"
            />
          </Label>
          <p className="text-muted-foreground text-xs text-center">
            Recomendado: 400x400px, máx 2MB
          </p>
        </div>

        {/* Formulário */}
        <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
          <div className="space-y-2">
            <Label className="text-foreground">Nome Completo *</Label>
            <Input
              placeholder="João Silva"
              value={newManager.name}
              onChange={(e) => setNewManager({ ...newManager, name: e.target.value })}
              className="bg-input border-border text-foreground"
            />
          </div>

          <div className="space-y-2">
            <Label className="text-foreground">CPF *</Label>
            <Input
              placeholder="000.000.000-00"
              value={newManager.cpf}
              onChange={(e) => setNewManager({ ...newManager, cpf: e.target.value })}
              className="bg-input border-border text-foreground"
            />
          </div>

          <div className="space-y-2">
            <Label className="text-foreground">Email *</Label>
            <Input
              type="email"
              placeholder="joao@exemplo.com"
              value={newManager.email}
              onChange={(e) => setNewManager({ ...newManager, email: e.target.value })}
              className="bg-input border-border text-foreground"
            />
          </div>

          <div className="space-y-2">
            <Label className="text-foreground flex items-center gap-2">
              <MessageCircle size={16} className="text-green-500" />
              WhatsApp *
            </Label>
            <Input
              placeholder="(11) 99999-9999"
              value={newManager.whatsapp}
              onChange={(e) => setNewManager({ ...newManager, whatsapp: e.target.value })}
              className="bg-input border-border text-foreground"
            />
          </div>

          <div className="space-y-2">
            <Label className="text-foreground">Senha *</Label>
            <Input
              type="password"
              placeholder="••••••••"
              value={newManager.password}
              onChange={(e) => setNewManager({ ...newManager, password: e.target.value })}
              className="bg-input border-border text-foreground"
            />
          </div>

          <div className="space-y-2">
            <Label className="text-foreground">Máximo de Clientes</Label>
            <Input
              type="number"
              value={newManager.max_clients}
              onChange={(e) => setNewManager({ ...newManager, max_clients: parseInt(e.target.value) })}
              className="bg-input border-border text-foreground"
            />
          </div>
        </div>

        {/* Botões */}
        <div className="flex gap-3 justify-end pt-4 border-t border-border">
          <Button
            onClick={() => setModalOpen(false)}
            variant="outline"
            className="border-border"
          >
            Cancelar
          </Button>
          <Button
            onClick={handleCreateManager}
            className="bg-primary hover:bg-primary/90"
          >
            <UserPlus size={18} className="mr-2" />
            Criar Gerente
          </Button>
        </div>
      </div>
    </DialogContent>
  </Dialog>

  {/* Lista de Gerentes */}
  <Card className="bg-card border-border">
    <CardHeader>
      <CardTitle className="text-foreground flex items-center justify-between">
        <span className="flex items-center gap-2">
          <Users size={24} />
          Gerentes Cadastrados ({managers.length})
        </span>
      </CardTitle>
    </CardHeader>
    <CardContent>
      <div className="space-y-3">
        {managers.length === 0 ? (
          <p className="text-muted-foreground text-center py-8">
            Nenhum gerente cadastrado
          </p>
        ) : (
          managers.map((manager) => (
            <div
              key={manager.id}
              className="flex items-center justify-between p-4 bg-accent/50 border border-border rounded-lg hover:bg-accent transition-colors"
            >
              <div className="flex items-center gap-4 flex-1">
                {/* Foto do Gerente */}
                {manager.photo_url ? (
                  <img
                    src={manager.photo_url}
                    alt={manager.name}
                    className="w-12 h-12 rounded-full object-cover border-2 border-primary"
                  />
                ) : (
                  <div className="w-12 h-12 bg-primary rounded-full flex items-center justify-center">
                    <span className="text-white font-bold text-lg">
                      {manager.name.charAt(0).toUpperCase()}
                    </span>
                  </div>
                )}
                
                <div className="flex-1">
                  <p className="text-foreground font-medium">{manager.name}</p>
                  <p className="text-muted-foreground text-sm">{manager.email}</p>
                  <div className="flex items-center gap-4 mt-1">
                    <p className="text-muted-foreground text-xs">CPF: {manager.cpf}</p>
                    {manager.whatsapp && (
                      <a
                        href={`https://wa.me/${manager.whatsapp.replace(/\D/g, '')}`}
                        target="_blank"
                        rel="noopener noreferrer"
                        className="flex items-center gap-1 text-green-500 text-xs hover:underline"
                      >
                        <MessageCircle size={12} />
                        {manager.whatsapp}
                      </a>
                    )}
                  </div>
                </div>
              </div>

              <div className="flex items-center gap-4">
                <div className="text-right">
                  <p className="text-foreground font-medium">
                    {manager.current_clients || 0}/{manager.max_clients} clientes
                  </p>
                  <span className={`text-xs px-2 py-1 rounded-full ${
                    manager.status === 'active' 
                      ? 'bg-green-500/10 text-green-500' 
                      : 'bg-red-500/10 text-red-500'
                  }`}>
                    {manager.status === 'active' ? 'Ativo' : 'Suspenso'}
                  </span>
                </div>

                <Button
                  onClick={() => handleDeleteManager(manager.id)}
                  variant="outline"
                  size="sm"
                  className="border-red-500 text-red-500 hover:bg-red-500/10"
                >
                  <Trash2 size={16} />
                </Button>
              </div>
            </div>
          ))
        )}
      </div>
    </CardContent>
  </Card>
</TabsContent>
